---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/popular?language=en-US&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.themoviedb.org
      Authorization:
      - Bearer <API_KEY>
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 12 Dec 2024 03:50:54 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=16598
      X-Memc:
      - HIT
      X-Memc-Key:
      - f147f269b881c1ffcda165f76b7c7e51
      X-Memc-Age:
      - '6117'
      X-Memc-Expires:
      - '16598'
      Etag:
      - W/"e00952a4aaba3d6b38bcc850f6a86dca"
      Vary:
      - Accept-Encoding,accept-encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 2a7246447843a365826e9d6b68bbe132.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - BKK50-P1
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - TnD_v_7TEUUWZr-OkhHjvBGYHc137RdeBZEMwdO_E5lHLgEv8CgCnw==
      Age:
      - '12976'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 12 Dec 2024 07:27:10 GMT
recorded_with: VCR 6.3.1
